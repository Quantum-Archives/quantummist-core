# 📡 FILE_SYNC_LOGIC.md – Logika synchronizacji plików QuantumMist

## 🎯 Cel
Stworzenie systemu zarządzania synchronizacją lokalnych i zewnętrznych zasobów w QuantumMist:
- między Google Drive i GitHub,
- wewnątrz systemu plików (lokalnie),
- między folderami użytkownika i folderami usług (Stragan Światła, Kosmogramy, Ulubione).

---

## 🗂 Struktura katalogów lokalnych
```
/srv/quantummist/
├── frontend/
├── ishkarim_admin/
├── modale/
├── sloty_ai/
├── logs/
├── user_journals/
├── user_favorites/
├── orders_pending/
├── kanwy/
├── sync_drive/
├── sync_github/
└── sync_config.json
```

---

## 🔁 Synchronizacja z Google Drive (via rclone)

### 📄 `sync_config.json`
```json
{
  "aliases": {
    "archiwum": "1A_yVIj_1BLGO6WwlzAGv2O5dCA4kE0Fp",
    "grafiki": "1B1jhPNTlI1HPUpC216d0WYJaP5IniSKT",
    "to_process": "1252L6D0vHESo-urc4Rsts5yANwx1eToR",
    "backupy_zip": "1hsefMwNYIDbGSUrLFDbWcFJ4C8qJvxDj"
  },
  "default_pull": ["to_process"],
  "default_push": ["archiwum", "backupy_zip"]
}
```

### 🧠 Rola aliasów:
- krótkie nazwy do folderów,
- wykorzystywane przez skrypty synchronizujące,
- pozwalają unikać twardych ID w kodzie,
- łatwe do zarządzania przez operatora ND5.

---

## 🌐 GitHub

### Repozytorium:
- `Quantum-Archives/QuantumMist`

### Synchronizacja:
- `sync_github/` → zawartość pushowana do `main` lub `develop`
- konfiguracja z `.syncignore` (co nie ma iść do repo)
- wersjonowanie ręczne lub przez Ishkarim Terminal

---

## 🧩 Synchronizowane foldery wewnętrzne

| Folder             | Opis |
|--------------------|------|
| `/user_journals/`  | zapisy i wpisy użytkowników |
| `/user_favorites/` | pliki i cytaty dodane jako ulubione |
| `/orders_pending/` | zamówienia oczekujące ze Straganu |
| `/kanwy/`          | eksportowane wpisy jako osobne pliki |
| `/logs/`           | logi systemowe i logi votów |

---

## 🧠 Przykładowe komendy (Bash)
```bash
./gdrive_push.sh
./gdrive_pull.sh grafiki
./github_sync.sh
```

---

## 🛡️ Bezpieczeństwo i kontrola
- Synchronizacja tylko przez konta z uprawnieniami `sync_master`
- Możliwość logowania każdej synchronizacji w `sync_history.log`
- Zabezpieczenie przed nadpisaniem plików użytkownika bez backupu

---

## ✅ Status
Logika gotowa. System obsługuje zarówno zewnętrzne synchronizacje jak i lokalne przepływy między modułami użytkownika. Gotowy do podpięcia pod cron oraz Ishkarim Terminal.
