# 📄 MD_RENDER_LOGIC.md – System ładowania i renderowania treści `.md`

## 🎯 Cel
Stworzyć spójny, rozszerzalny system do renderowania plików `.md` w interfejsie użytkownika (np. Aerendal, sekcje tematyczne), z obsługą stylów, trybów odbioru, zabezpieczeń oraz filtrowania.

---

## 📂 Struktura treści

### 📁 Foldery źródłowe
```
/aerendal/teksty/*.md
/sections/<sekcja>/<styl>/<plik>.md
```

### 🔖 Przykład nazewnictwa w `/sections`:
```
/sections/tarot/zadaniowiec/struktury_arkana.md
/sections/tarot/wrazliwy/obraz_gleboki.md
/sections/tarot/opiekun/droga_karty.md
```

---

## 🧠 Logika routingu
- Wybrana sekcja → `tarot`
- Wybrany tryb → `wrazliwy`
- System ładuje: `/sections/tarot/wrazliwy/index.json` → lista wpisów z tytułami + plikiem
- Następnie renderuje wskazany plik `.md`

---

## 🔧 Narzędzia renderujące
- 📦 `marked.js` – konwersja Markdown → HTML
- ✨ `DOMPurify` – filtracja niebezpiecznego HTML (jeśli włączymy osadzony kod)

---

## 🔐 Zabezpieczenia
- `oncontextmenu="return false"` + CSS `user-select: none`
- blokowanie pobierania poprzez brak przycisku i API `no-cache`
- ochrona przez system stylu `prose-invert`, uniemożliwiający łatwe kopiowanie stylów

---

## 🎨 Styl renderu
- Klasa: `prose prose-invert max-w-none`
- Kolory zależne od tonu (np. `zadaniowiec` = ciemny niebieski, `wrazliwy` = fioletowy, `opiekun` = złoty beż)
- Delikatne animacje wejścia (np. `fadeIn`, `blur-in`)

---

## 🔁 Tryby integracji
- 🔸 Strefa Aerendal – ładujemy `aerendal_index.json` → wskazany `.md`
- 🔸 Sekcje tematyczne – `GET /sections/:sekcja/:styl/index.json` → wybór treści
- 🔸 Admin panel – przypisywanie plików `.md` do odpowiednich trybów/ścieżek

---

## ✅ Status
System renderowania plików `.md` gotowy do integracji z interfejsami. Gotowy backend = Flask API serwujące pliki z odpowiednich ścieżek, z routingiem i filtrem trybu.

Dzięki temu każda sekcja może mieć swoją głębię, bez mieszania treści i stylu odbioru.
